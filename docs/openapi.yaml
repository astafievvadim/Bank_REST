openapi: 3.0.1
info:
  title: Bank Cards API
  description: API documentation for Bank Cards project
  version: "1.0"
servers:
- url: http://localhost:8080
  description: Generated server url
security:
- bearerAuth: []
paths:
  /admin/users/{userId}:
    get:
      tags:
      - admin-controller
      operationId: getUserById
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
    put:
      tags:
      - admin-controller
      operationId: updateUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequestDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
    delete:
      tags:
      - admin-controller
      operationId: deleteUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /cards/{cardId}/block:
    post:
      tags:
      - card-controller
      operationId: blockCard
      parameters:
      - name: cardId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockCardRequestDto'
        required: true
      responses:
        "200":
          description: OK
  /cards/transfer:
    post:
      tags:
      - card-controller
      operationId: transfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequestDto'
        required: true
      responses:
        "200":
          description: OK
  /auth/login:
    post:
      tags:
      - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequestDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthResponseDto'
  /admin/users:
    get:
      tags:
      - admin-controller
      operationId: getAllUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDto'
    post:
      tags:
      - admin-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequestDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserDto'
  /admin/block-requests/{requestId}/decline:
    post:
      tags:
      - admin-controller
      operationId: declineBlockRequest
      parameters:
      - name: requestId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeclineCommentDto'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BlockCardRequest'
  /admin/block-requests/{requestId}/approve:
    post:
      tags:
      - admin-controller
      operationId: approveBlockRequest
      parameters:
      - name: requestId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BlockCardRequest'
  /cards:
    get:
      tags:
      - card-controller
      operationId: getAllUserCards
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 5
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          default: expirationDate
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CardDto'
  /cards/{cardId}/balance:
    get:
      tags:
      - card-controller
      operationId: getCardBalance
      parameters:
      - name: cardId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: number
                format: double
  /cards/admin/users/{userId}/cards:
    get:
      tags:
      - card-controller
      operationId: getCardsByUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 5
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          default: expirationDate
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CardDto'
  /admin/block-requests:
    get:
      tags:
      - admin-controller
      operationId: getAllBlockRequests
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BlockCardRequestDto'
components:
  schemas:
    CreateUserRequestDto:
      type: object
      properties:
        name:
          type: string
        lastname:
          type: string
        birthDate:
          type: string
          format: date-time
        role:
          type: string
          enum:
          - ADMIN
          - USER
        email:
          type: string
        password:
          type: string
    UserDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        lastname:
          type: string
        email:
          type: string
        role:
          type: string
          enum:
          - ADMIN
          - USER
        registrationDate:
          type: string
          format: date-time
    BlockCardRequestDto:
      type: object
      properties:
        cardId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        comment:
          type: string
    TransferRequestDto:
      type: object
      properties:
        fromCardId:
          type: integer
          format: int64
        toCardId:
          type: integer
          format: int64
        amount:
          type: number
    AuthRequestDto:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    AuthResponseDto:
      type: object
      properties:
        token:
          type: string
    DeclineCommentDto:
      type: object
      properties:
        comment:
          type: string
    BlockCardRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        card:
          $ref: '#/components/schemas/Card'
        user:
          $ref: '#/components/schemas/CustomUser'
        requestedAt:
          type: string
          format: date-time
        status:
          type: string
          enum:
          - PENDING
          - APPROVED
          - DECLINED
        comment:
          type: string
    Card:
      type: object
      properties:
        id:
          type: integer
          format: int64
        encryptedUuid:
          type: string
        user:
          $ref: '#/components/schemas/CustomUser'
        expirationDate:
          type: string
          format: date
        status:
          type: string
          enum:
          - ACTIVE
          - BLOCKED
          - EXPIRED
        balance:
          type: number
    CustomUser:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        lastname:
          type: string
        birthDate:
          type: string
          format: date-time
        role:
          type: string
          enum:
          - ADMIN
          - USER
        email:
          type: string
        password:
          type: string
        cards:
          type: array
          items:
            $ref: '#/components/schemas/Card'
        registrationDate:
          type: string
          format: date-time
        enabled:
          type: boolean
        username:
          type: string
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/GrantedAuthority'
        credentialsNonExpired:
          type: boolean
        accountNonExpired:
          type: boolean
        accountNonLocked:
          type: boolean
    GrantedAuthority:
      type: object
      properties:
        authority:
          type: string
    CardDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        maskedUuid:
          type: string
        expirationDate:
          type: string
          format: date
        balance:
          type: number
          format: double
        status:
          type: string
          enum:
          - ACTIVE
          - BLOCKED
          - EXPIRED
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
